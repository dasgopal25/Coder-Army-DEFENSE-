Date: 12/sept/2025
Day 10:- Flexbox in CSS| One Project | CSS Full course #04

code Link:- https://www.notion.so/Lecture-04-FlexBox-26b3a78e0e2280639e3cec5c3084869a?source=copy_link

Web Development
------------------
CSS Flexbox :-
Flexbox (Flexible Box Layout) is a one-dimensional layout system in CSS. It helps arrange elements in rows 
or columns with proper alignment, spacing, and flexibility.
-------------------------------------------------------------------------------------------------------
Activating Flexbox:
To use Flexbox, apply display: flex to the parent container.
Example:

.container {
  display: flex;
}
-------------------------------------------------------------------------------------
Main Concepts:
Main Axis: Horizontal (by default â†’ row).

Cross Axis: Perpendicular to main axis (vertical by default).

Direction can change using flex-direction.
----------------------------------------------------------------------------------------------
Parent (Container) Properties

These control how flex items are arranged inside the container.

ðŸ”¹ flex-direction:

.container {
  flex-direction: row;         /* default â†’ left to right */
  flex-direction: row-reverse; /* right to left */
  flex-direction: column;      /* top to bottom */
  flex-direction: column-reverse; /* bottom to top */
}
-----------------------------------------------------------------------------------------------------
ðŸ”¹ justify-content (aligns items on main axis)

.container {
  justify-content: flex-start;   /* default, items to left/top */
  justify-content: flex-end;     /* items to right/bottom */
  justify-content: center;       /* center items */
  justify-content: space-between;/* equal space between */
  justify-content: space-around; /* equal space around */
  justify-content: space-evenly; /* equal space everywhere */
}
-----------------------------------------------------------------------------
ðŸ”¹ align-items (aligns items on cross axis)
.container {
  align-items: flex-start; /* top */
  align-items: flex-end;   /* bottom */
  align-items: center;     /* middle */
  align-items: stretch;    /* default, fills height */
  align-items: baseline;   /* align by text baseline */
}
------------------------------------------------------------------------------------------
ðŸ”¹ align-content (for multiple rows/columns)

.container {
  flex-wrap: wrap; /* must use wrap */
  align-content: flex-start;
  align-content: flex-end;
  align-content: center;
  align-content: space-between;
  align-content: space-around;
  align-content: space-evenly;
}
--------------------------------------------------------------------------------------
ðŸ”¹ flex-wrap

.container {
  flex-wrap: nowrap;   /* default, no wrapping */
  flex-wrap: wrap;     /* wrap to next line */
  flex-wrap: wrap-reverse; /* wrap but reverse */
}
----------------------------------------------------------------------------------------------
ðŸ”¹ gap:

.container {
  gap: 20px;
}
---------------------------------------------------------------------------------------------
Child (Item) Properties

These control how each item behaves inside the container.

ðŸ”¹ order:

.item1 { order: 1; }
.item2 { order: 2; }
.item3 { order: -1; } /* negative = higher priority */
---------------------------------------------------------------------------------------------
ðŸ”¹ flex-grow:

.item1 { flex-grow: 1; }
.item2 { flex-grow: 2; } /* grows double compared to item1 */
----------------------------------------------------------------------------------------------------
ðŸ”¹ flex-shrink:

.item1 { flex-shrink: 1; }
.item2 { flex-shrink: 0; } /* will not shrink */
------------------------------------------------------------------------------------------------------
ðŸ”¹ flex-basis:

.item { flex-basis: 200px; }
--------------------------------------------------------------------------------------------------------
ðŸ”¹ flex shorthand:

.item {
  flex: grow shrink basis;
}
/* Example */
.item { flex: 1 1 200px; }
---------------------------------------------------------------------------------------------------------------
ðŸ”¹ align-self:

.item {
  align-self: center;
  align-self: flex-start;
  align-self: flex-end;
}
--------------------------------------------------------------------------------------------------------------------

--------------------------------------- Thank You ----------------------------------------
 